20-02-2019

1)	Voor iedere handeling van een doa wordt nu een nieuwe EntityManagerFactory en EntityManager gemaakt, en wordt weer afgesloten.
	Is dit een goede manier, of zou het beter zijn om bv de factory static te maken?

2)	Op dit moment maak ik gebruik van overload en krijg ik 2 methode.
	bv: public T readSingleObjectByColumn(String column, int value) 
		en 
		public T readSingleObjectByColumn(String column, String value) 
	Kan ik deze zo schrijven dat voor de waarde value zowel een int als string opgegeven kan worden, zonder hiervoor twee identieke methode te schrijven?

3) 	Hoe kan ik code 1 omschrijven naar code 2? Code 2 is een stuk overzichtelijker, maar krijg ik niet goed werkend.
	code 1:
		public T readSingleObjectByColumn(String column, String value) {
		CriteriaBuilder cb = entityManager.getCriteriaBuilder();
		CriteriaQuery<T> criteria = cb.createQuery(classToSet);
		Root<T> i = criteria.from(classToSet);
		criteria.select(i).where(cb.equal(i.get(column), value));
		TypedQuery<T> query = entityManager.createQuery(criteria);
		T object = query.getSingleResult();
		entityManagerFactory.close();
		return object;
		
		code 2:
		T object = (T) entityManager.createQuery("SELECT a FROM :class a WHERE :column = :value ")
			.setParameter("class", classToSet)
			.setParameter("column", column)
			.setParameter("value", value)
			.getSingleResult();
		return object;

4) 	Waar is het nodig om CascadeType toe te passen? Gelijk als bij mijn SQL workbench template?

5) 	Moeten de DAO's allemaal in een try block staan om op te vangen als er geen resultaten worden gevonden?

6)	Op dit moment werkt nog niet de hele applicatie via hibernate juist. Dit komt o.a. omdat eerder gebruik werd gemaakt van
	bv: account.getAccountTypeId(), en voor hibernate zal worden: account.getAccountType().getId().
	Daarnaast heb ik twee doa's nog niet overgeschreven naar Hibernate.
	Is het voor de komende opdracht nodig de applicatie eerst volledig te hebben draaien in Hibernate voordat ik spring ga toepassen?
	
7)	Ik ben nu gestart met het lezen van het String Boek. Zijn er nog punten over Hibernate die ik nu heb gemist/niet goed heb begrepen
	als je naar de code kijkt?